name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: List repository contents
      run: |
        set -e
        set -x
        echo "=== Repository contents ==="
        ls -la
        echo "=== Checking for key files ==="
        test -f index.html && echo "✓ index.html exists" || echo "✗ index.html missing"
        test -f .nojekyll && echo "✓ .nojekyll exists" || echo "✗ .nojekyll missing"
        test -f CNAME && echo "✓ CNAME exists" || echo "✗ CNAME missing"
        test -d en-GB && echo "✓ en-GB/ exists" || echo "✗ en-GB/ missing"
        test -d fr-FR && echo "✓ fr-FR/ exists" || echo "✗ fr-FR/ missing"
    
    - name: Prepare site files
      run: |
        set -e
        set -x
        echo "=== Creating _site directory ==="
        mkdir -p _site
        
        echo "=== Copying HTML files ==="
        if ls *.html 1> /dev/null 2>&1; then
            cp *.html _site/
            echo "Copied HTML files"
        else
            echo "No HTML files found in root"
        fi
        
        echo "=== Copying directories ==="
        for dir in en-GB fr-FR tu eli5 privacy-policy; do
            if [ -d "$dir" ]; then
                cp -r "$dir" _site/
                echo "Copied $dir/"
            else
                echo "Directory $dir not found"
            fi
        done
        
        echo "=== Copying special files ==="
        for file in .nojekyll CNAME; do
            if [ -f "$file" ]; then
                cp "$file" _site/
                echo "Copied $file"
            else
                echo "File $file not found"
            fi
        done
        
        echo "=== Final _site contents ==="
        ls -la _site/
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4